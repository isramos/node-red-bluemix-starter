[
    {
        "id": "f6943f15.08708",
        "type": "tab",
        "label": "hardware"
    },
    {
        "id": "991b8c7b.c4cd7",
        "type": "tab",
        "label": "DevSimulator"
    },
    {
        "id": "66772a78.2a2d54",
        "type": "tab",
        "label": "UI-setup"
    },
    {
        "id": "7840aecf.dc143",
        "type": "ui_group",
        "z": "",
        "name": "Welcome Page",
        "tab": "4344b8bc.5cf2e8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "4344b8bc.5cf2e8",
        "type": "ui_tab",
        "z": "",
        "name": "Device Monitor",
        "icon": "dashboard"
    },
    {
        "id": "e8a617c5.7e5428",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Helvetica Neue",
                "edited": false,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Helvetica Neue",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "Helvetica Neue"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8b6516b7.856e68",
        "type": "ui_tab",
        "z": "",
        "name": "Setup",
        "icon": "dashboard"
    },
    {
        "id": "b1f865dd.9faf58",
        "type": "ui_group",
        "z": "",
        "name": "Device Setup",
        "tab": "8b6516b7.856e68",
        "disp": true,
        "width": "6"
    },
    {
        "id": "f86f139f.bd9c1",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/simple",
        "wholemsg": "false"
    },
    {
        "id": "6a4b2fc6.4652a",
        "type": "http request",
        "z": "66772a78.2a2d54",
        "name": "req",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 425,
        "y": 319,
        "wires": [
            [
                "73cef14.2fb4e1"
            ]
        ]
    },
    {
        "id": "286ad470.90bd4c",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "get flows",
        "func": "var apiurl = global.get(\"apiurl\") || \"api url not defined\";\n\ndelete msg.headers;\ndelete msg.payload;\nmsg.method = 'GET';\n\nmsg.url = apiurl + \"flows\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 297,
        "y": 320,
        "wires": [
            [
                "6a4b2fc6.4652a"
            ]
        ]
    },
    {
        "id": "73cef14.2fb4e1",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "id for hardware tab",
        "func": "var a = msg.payload;\nvar id = \"error: id not found\";\n\na.forEach( x => { \n    if(x.type === 'tab' && x.label === 'hardware' ) \n        id= x.id ;});\n\nflow.set('hardware_tab', id);\n\nmsg.payload = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 585.5,
        "y": 319,
        "wires": [
            [
                "5edb8108.e604a",
                "d9a8822.b0e358"
            ]
        ]
    },
    {
        "id": "5edb8108.e604a",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "get hw flow",
        "func": "var apiurl = global.get(\"apiurl\") || \"api url not defined\";\n\n\nvar hw_id = flow.get('hardware_tab') || 0;\nmsg.url = apiurl + \"flow/\" + hw_id;\ndelete msg.headers;\n\nmsg.method = 'GET';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 288.5,
        "y": 387,
        "wires": [
            [
                "7932373a.19abf8"
            ]
        ]
    },
    {
        "id": "7932373a.19abf8",
        "type": "http request",
        "z": "66772a78.2a2d54",
        "name": "req",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 431.5,
        "y": 388,
        "wires": [
            [
                "516a7ed0.d1e2d",
                "d9bef4e2.2286f8"
            ]
        ]
    },
    {
        "id": "36a6b53e.a0baaa",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "",
        "func": "delete msg.headers;\nvar apiurl = global.get(\"apiurl\") || \"api url not defined\";\nvar hardwareFlow = flow.get('hardwareFlow');\nvar hw_id = flow.get('hardware_tab') || 0;\nvar desiredDeviceId = flow.get('desiredDeviceId');\n\nmsg.url = apiurl + \"flow/\" + hw_id;\nmsg.method = 'PUT';\n\nhardwareFlow.nodes.forEach ( n => { \n    if(n.type === 'ibmiot in'){\n        n.deviceId = desiredDeviceId;    \n    }});\n\nmsg.payload = hardwareFlow;\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 326,
        "y": 149,
        "wires": [
            [
                "98f409be.4232b8",
                "8534e2f8.d050c",
                "43373bac.ea53f4"
            ]
        ]
    },
    {
        "id": "98f409be.4232b8",
        "type": "http request",
        "z": "66772a78.2a2d54",
        "name": "PUT DevId",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 484,
        "y": 149,
        "wires": [
            [
                "286ad470.90bd4c",
                "88543c39.93207"
            ]
        ]
    },
    {
        "id": "516a7ed0.d1e2d",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "parse curr devid",
        "func": "flow.set('hardwareFlow', msg.payload);\nvar a = msg.payload.nodes;\n\nvar idx = null;\n\n\na.forEach( (x, index) => { \n    if(x.type === 'ibmiot in' && x.service === 'quickstart' ) \n        idx = index; \n    });\n  \n    \nvar currentDeviceId = a[idx].deviceId || \"error\";\n\nflow.set('currentDeviceId', currentDeviceId);\n\nmsg.payload = {};\nmsg.payload = currentDeviceId;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 578.5,
        "y": 389,
        "wires": [
            [
                "9930dd9e.8dbe3",
                "8ff6593e.950de8",
                "6043e159.593ee"
            ]
        ]
    },
    {
        "id": "9930dd9e.8dbe3",
        "type": "ui_text",
        "z": "66772a78.2a2d54",
        "group": "b1f865dd.9faf58",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "show current DevId",
        "label": "Current Device ID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 685,
        "y": 484,
        "wires": []
    },
    {
        "id": "1688a18c.d8dbee",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 519,
        "y": 95,
        "wires": []
    },
    {
        "id": "9b40f43e.34e568",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "save desired",
        "func": "\nflow.set('desiredDeviceId', msg.payload.desiredCode);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 351,
        "y": 95,
        "wires": [
            [
                "1688a18c.d8dbee",
                "36a6b53e.a0baaa"
            ]
        ]
    },
    {
        "id": "c4e58e7a.c80c8",
        "type": "ui_form",
        "z": "66772a78.2a2d54",
        "name": "set DeviceId",
        "label": "Device ID (MAC Address)",
        "group": "b1f865dd.9faf58",
        "order": 4,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "enter the device id e.g 1234ABCD",
                "value": "desiredCode",
                "type": "text",
                "required": true
            }
        ],
        "formValue": {
            "desiredCode": ""
        },
        "payload": "",
        "topic": "",
        "x": 168.5,
        "y": 92,
        "wires": [
            [
                "9b40f43e.34e568"
            ]
        ]
    },
    {
        "id": "8ff6593e.950de8",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "",
        "func": "\nmsg.devId = msg.payload;\nmsg.payload = \"https://quickstart.internetofthings.ibmcloud.com/#/device/\" + msg.devId + \"/sensor/\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 572.5,
        "y": 532,
        "wires": [
            [
                "8fcb76b3.b40328"
            ]
        ]
    },
    {
        "id": "8fcb76b3.b40328",
        "type": "ui_template",
        "z": "66772a78.2a2d54",
        "group": "b1f865dd.9faf58",
        "name": "show IoT url",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n\n<p><a href=\"{{msg.payload}}\" target=\"_blank\">View Device {{msg.devId}} in Watson IoT</a></p><br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 742,
        "y": 531,
        "wires": [
            []
        ]
    },
    {
        "id": "d9a8822.b0e358",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "Hardware Tab",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 808,
        "y": 320,
        "wires": []
    },
    {
        "id": "9c99d417.e79968",
        "type": "ui_dropdown",
        "z": "991b8c7b.c4cd7",
        "name": "Sim Scenario",
        "label": "Simulation",
        "group": "7840aecf.dc143",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ambient (20C)",
                "value": 20,
                "type": "num"
            },
            {
                "label": "Cold (-5C)",
                "value": -5,
                "type": "num"
            },
            {
                "label": "Hot (35C)",
                "value": 35,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 250,
        "y": 231,
        "wires": [
            [
                "a81af7be.7f83f8"
            ]
        ]
    },
    {
        "id": "a81af7be.7f83f8",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "target",
        "func": "if (typeof(msg.payload) ===\"number\" ){\n    context.set('target', msg.payload);\n    return;\n}\n\nvar counter = context.get('counter') || 25;\nvar target = context.get('target') || 20;\n\nvar diff = target - counter;\n\nif (diff !== 0){\n    counter = counter + (diff * 0.01);\n    context.set('counter', counter);\n\n}\n\nmsg.temp= counter;\nmsg.target = target;\nmsg.payload = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 246.5,
        "y": 318,
        "wires": [
            [
                "c330c6c3.eb8888"
            ]
        ]
    },
    {
        "id": "1f057bde.5529d4",
        "type": "inject",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "topic": "",
        "payload": "tick",
        "payloadType": "str",
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "x": 85,
        "y": 317,
        "wires": [
            [
                "a81af7be.7f83f8"
            ]
        ]
    },
    {
        "id": "3fc9607d.411e8",
        "type": "debug",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 572.5,
        "y": 440,
        "wires": []
    },
    {
        "id": "afc0aee6.17008",
        "type": "ui_chart",
        "z": "991b8c7b.c4cd7",
        "name": "Current Temp Chart",
        "group": "7840aecf.dc143",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Waiting for Data",
        "ymin": "-3",
        "ymax": "37",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "x": 847,
        "y": 262,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2b4ca194.f6c7ee",
        "type": "inject",
        "z": "991b8c7b.c4cd7",
        "name": "default",
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 101.5,
        "y": 229,
        "wires": [
            [
                "9c99d417.e79968"
            ]
        ]
    },
    {
        "id": "935c46b1.749dc8",
        "type": "inject",
        "z": "991b8c7b.c4cd7",
        "name": "reset chart",
        "topic": "",
        "payload": "[ ]",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 820.5,
        "y": 191,
        "wires": [
            [
                "8403b11e.31259"
            ]
        ]
    },
    {
        "id": "c330c6c3.eb8888",
        "type": "npm",
        "z": "991b8c7b.c4cd7",
        "name": "GaussianDistr",
        "func": "// NPM module exposed as variable, npm_module\n\nmsg.payload = npm_module.rvnorm(1, 0, 6);\n\nreturn msg.payload;\n//return npm_module(msg.payload);",
        "npm_module": "randgen",
        "module_style": "function",
        "msg_payload": "return_val",
        "function_name": "rnorm",
        "x": 256,
        "y": 409,
        "wires": [
            [
                "7054de74.55e63"
            ]
        ]
    },
    {
        "id": "7054de74.55e63",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "normal",
        "func": "msg.normal = msg.payload/10;\n\nvar res =  msg.normal + msg.temp;\n\nmsg.payload = parseFloat(res.toFixed(1));\n\nvar isSimEnabled = global.get(\"simulation\") || false;\n\nif (isSimEnabled) return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "x": 411.5,
        "y": 409,
        "wires": [
            [
                "afc0aee6.17008",
                "3fc9607d.411e8",
                "5225c53f.c5027c",
                "925b1ae5.2b31e8"
            ]
        ]
    },
    {
        "id": "5225c53f.c5027c",
        "type": "ui_gauge",
        "z": "991b8c7b.c4cd7",
        "name": "Current Temp Gauge",
        "group": "7840aecf.dc143",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Current Pack Temperature",
        "label": "C",
        "format": "{{value}}",
        "min": "-20",
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 858,
        "y": 300,
        "wires": []
    },
    {
        "id": "925b1ae5.2b31e8",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "pack",
        "func": "var t = msg.payload;\nmsg.payload = {};\nmsg.payload.temp = t;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 533.5,
        "y": 113,
        "wires": [
            [
                "f7538f60.d2e0e"
            ]
        ]
    },
    {
        "id": "16951298.e5cafd",
        "type": "debug",
        "z": "991b8c7b.c4cd7",
        "name": "Hardware Reading",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 550,
        "y": 43,
        "wires": []
    },
    {
        "id": "f7538f60.d2e0e",
        "type": "delay",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 673,
        "y": 111,
        "wires": [
            [
                "3b57232b.6725dc"
            ]
        ]
    },
    {
        "id": "a16c6882.0f9398",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "convert",
        "func": "var sensorChoice = global.get('sensorType');\n\nif (msg.payload.d === undefined)\n    return null;\nif (msg.payload.objectTemp === undefined)\n    return null;    \n    \nif (sensorChoice === 'objectTemp' ){\n    var t = msg.payload.d.objectTemp;\n}\nelse {\n    var t = msg.payload.d.ambientTemp;\n}\n\nmsg.payload = {};\nmsg.payload = parseFloat(t);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 376,
        "y": 113,
        "wires": [
            [
                "925b1ae5.2b31e8",
                "16951298.e5cafd",
                "1e5c70e7.39939f"
            ]
        ]
    },
    {
        "id": "8632f3ca.5f43b",
        "type": "link in",
        "z": "991b8c7b.c4cd7",
        "name": "dataIn",
        "links": [
            "4d3c25a8.ce27bc"
        ],
        "x": 263.5,
        "y": 113,
        "wires": [
            [
                "a16c6882.0f9398"
            ]
        ]
    },
    {
        "id": "8874293c.53a978",
        "type": "comment",
        "z": "991b8c7b.c4cd7",
        "name": "Device Data",
        "info": "",
        "x": 208.5,
        "y": 65,
        "wires": []
    },
    {
        "id": "a0814936.a34a88",
        "type": "comment",
        "z": "991b8c7b.c4cd7",
        "name": "Simulated",
        "info": "",
        "x": 75,
        "y": 170,
        "wires": []
    },
    {
        "id": "8403b11e.31259",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "reset chart",
        "func": "\nmsg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 827.5,
        "y": 225,
        "wires": [
            [
                "afc0aee6.17008",
                "5225c53f.c5027c"
            ]
        ]
    },
    {
        "id": "3b57232b.6725dc",
        "type": "websocket out",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "server": "f86f139f.bd9c1",
        "client": "",
        "x": 841.5,
        "y": 111,
        "wires": []
    },
    {
        "id": "b5f897f1.a61348",
        "type": "ui_button",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "group": "7840aecf.dc143",
        "order": 5,
        "width": "1",
        "height": "1",
        "label": "CLR",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 650.5,
        "y": 222,
        "wires": [
            [
                "8403b11e.31259"
            ]
        ]
    },
    {
        "id": "46d30f5d.3f7fa",
        "type": "ui_text",
        "z": "66772a78.2a2d54",
        "group": "b1f865dd.9faf58",
        "order": 5,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "Last Message Received On:",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 567.5,
        "y": 608,
        "wires": []
    },
    {
        "id": "302c614c.63a9ce",
        "type": "link in",
        "z": "66772a78.2a2d54",
        "name": "dataToUI",
        "links": [
            "4d3c25a8.ce27bc"
        ],
        "x": 216.5,
        "y": 605,
        "wires": [
            [
                "667f7904.949cb8",
                "260b3c6f.3436b4",
                "692dfedc.8ec1b"
            ]
        ]
    },
    {
        "id": "667f7904.949cb8",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "",
        "func": "msg.payload = new Date().toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 322,
        "y": 608,
        "wires": [
            [
                "46d30f5d.3f7fa"
            ]
        ]
    },
    {
        "id": "47472262.5c048c",
        "type": "ui_dropdown",
        "z": "66772a78.2a2d54",
        "name": "",
        "label": "Select Sensor",
        "group": "b1f865dd.9faf58",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Ambient Temp",
                "value": "ambientTemp",
                "type": "str"
            },
            {
                "label": "Object Temp",
                "value": "objectTemp",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 453.5,
        "y": 734,
        "wires": [
            [
                "43134ae.ea14db4"
            ]
        ]
    },
    {
        "id": "7972f1f2.0bb42",
        "type": "inject",
        "z": "66772a78.2a2d54",
        "name": "init",
        "topic": "",
        "payload": "objectTemp",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 303,
        "y": 734,
        "wires": [
            [
                "47472262.5c048c"
            ]
        ]
    },
    {
        "id": "43134ae.ea14db4",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "",
        "func": "global.set('sensorType', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 602,
        "y": 734,
        "wires": [
            []
        ]
    },
    {
        "id": "6c528444.a6fc0c",
        "type": "ui_text",
        "z": "66772a78.2a2d54",
        "group": "b1f865dd.9faf58",
        "order": 5,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Ambient Temp",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "x": 524,
        "y": 641,
        "wires": []
    },
    {
        "id": "4c0a61b6.95b5a",
        "type": "ui_text",
        "z": "66772a78.2a2d54",
        "group": "b1f865dd.9faf58",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Object Temp",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "x": 509,
        "y": 676,
        "wires": []
    },
    {
        "id": "260b3c6f.3436b4",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "ambient",
        "func": "\nvar t = msg.payload.d.ambientTemp;\n\nmsg.payload = {};\nmsg.payload = parseFloat(t);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 325,
        "y": 646,
        "wires": [
            [
                "6c528444.a6fc0c"
            ]
        ]
    },
    {
        "id": "692dfedc.8ec1b",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "object",
        "func": "\nvar t = msg.payload.d.objectTemp;\n\nmsg.payload = {};\nmsg.payload = parseFloat(t);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 317,
        "y": 679,
        "wires": [
            [
                "4c0a61b6.95b5a"
            ]
        ]
    },
    {
        "id": "71984121.f7cab",
        "type": "ui_switch",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "label": "Enable Simulation",
        "group": "7840aecf.dc143",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 270,
        "y": 164,
        "wires": [
            [
                "f5afbbd9.8cf2f8"
            ]
        ]
    },
    {
        "id": "f5afbbd9.8cf2f8",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "mem",
        "func": "global.set(\"simulation\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 388,
        "y": 202,
        "wires": [
            []
        ]
    },
    {
        "id": "1e5c70e7.39939f",
        "type": "function",
        "z": "991b8c7b.c4cd7",
        "name": "",
        "func": "var isSimEnabled = global.get(\"simulation\") || false;\n\nif (!isSimEnabled) return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "x": 567,
        "y": 274,
        "wires": [
            [
                "afc0aee6.17008",
                "5225c53f.c5027c"
            ]
        ]
    },
    {
        "id": "a7fe0b62.28d7f8",
        "type": "inject",
        "z": "66772a78.2a2d54",
        "name": "init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 83.5,
        "y": 34,
        "wires": [
            [
                "d371a4.a0c33e6"
            ]
        ]
    },
    {
        "id": "d371a4.a0c33e6",
        "type": "function",
        "z": "66772a78.2a2d54",
        "name": "globals",
        "func": "var apiurl = \"http://hardware-proxy.mybluemix.net/red/\";\n\nglobal.set(\"apiurl\", apiurl);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 34,
        "wires": [
            [
                "7ba4aa5.32a5f54"
            ]
        ]
    },
    {
        "id": "7ba4aa5.32a5f54",
        "type": "link out",
        "z": "66772a78.2a2d54",
        "name": "init complete",
        "links": [
            "118e2a19.f43396"
        ],
        "x": 323.5,
        "y": 34,
        "wires": []
    },
    {
        "id": "118e2a19.f43396",
        "type": "link in",
        "z": "66772a78.2a2d54",
        "name": "get dev id",
        "links": [
            "7ba4aa5.32a5f54"
        ],
        "x": 172.5,
        "y": 319,
        "wires": [
            [
                "286ad470.90bd4c"
            ]
        ]
    },
    {
        "id": "6043e159.593ee",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "Stored Device Id",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 789,
        "y": 386,
        "wires": []
    },
    {
        "id": "7acfd23a.e2174c",
        "type": "ibmiot in",
        "z": "f6943f15.08708",
        "authentication": "quickstart",
        "apiKey": "",
        "inputType": "evt",
        "deviceId": "12345",
        "applicationId": "",
        "deviceType": "+",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "IBM IoT",
        "service": "quickstart",
        "allDevices": "",
        "allApplications": "",
        "allDeviceTypes": true,
        "allEvents": true,
        "allCommands": "",
        "allFormats": "",
        "qos": 0,
        "x": 236.5,
        "y": 200,
        "wires": [
            [
                "4d3c25a8.ce27bc"
            ]
        ]
    },
    {
        "id": "ea6a68b6.c90be8",
        "type": "comment",
        "z": "f6943f15.08708",
        "name": "WARNING: DO NOT CHANGE THIS PAGE MANUALLY",
        "info": "",
        "x": 332.5,
        "y": 141,
        "wires": []
    },
    {
        "id": "6264e863.b25678",
        "type": "inject",
        "z": "66772a78.2a2d54",
        "name": "",
        "topic": "",
        "payload": "{\"desiredCode\": \"12345\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 105.5,
        "y": 198,
        "wires": [
            [
                "9b40f43e.34e568"
            ]
        ]
    },
    {
        "id": "88543c39.93207",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 688,
        "y": 150,
        "wires": []
    },
    {
        "id": "8534e2f8.d050c",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 492,
        "y": 192,
        "wires": []
    },
    {
        "id": "d9bef4e2.2286f8",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 468,
        "y": 444,
        "wires": []
    },
    {
        "id": "43373bac.ea53f4",
        "type": "debug",
        "z": "66772a78.2a2d54",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "url",
        "x": 477,
        "y": 236,
        "wires": []
    },
    {
        "id": "4d3c25a8.ce27bc",
        "type": "link out",
        "z": "f6943f15.08708",
        "name": "dataOut",
        "links": [
            "302c614c.63a9ce",
            "8632f3ca.5f43b"
        ],
        "x": 339.5,
        "y": 200,
        "wires": []
    }
]
